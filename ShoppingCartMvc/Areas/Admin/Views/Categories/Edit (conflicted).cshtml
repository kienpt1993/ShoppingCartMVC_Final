@model ShopingCartEF.Category

@{
    ViewBag.Title = "Edit";
}





<ul class="breadcrumb">
    <li>
        <i class="icon-home"></i>
        <a href="index.html">Home</a>
        <i class="icon-angle-right"></i>
    </li>
    <li>
        <i class="icon-edit"></i>
        <a href="#">Forms</a>
    </li>
</ul>

<div class="row-fluid sortable ui-sortable">
    <div class="box span12">
        <div class="box-header" data-original-title="">
            <h2><i class="halflings-icon edit"></i><span class="break"></span>Sửa</h2>
            <div class="box-icon">
                <a href="#" class="btn-setting"><i class="halflings-icon wrench"></i></a>
                <a href="#" class="btn-minimize"><i class="halflings-icon chevron-up"></i></a>
                <a href="#" class="btn-close"><i class="halflings-icon remove"></i></a>
            </div>
        </div>
        <div class="box-content">

            @using (Html.BeginForm("Edit", "Categories", FormMethod.Post, htmlAttributes: new { @class = "form-horizontal", enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.CategoryID)
                <fieldset>
                    <div class="control-group">

                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label  " })
                        <div class="controls">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control span6" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="controls">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control span6" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(model => model.SortOrder, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="controls">
                            @Html.EditorFor(model => model.SortOrder, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SortOrder, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(model => model.ParentID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="controls">
                            @Html.EditorFor(model => model.ParentID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ParentID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(model => model.IsPublished, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="controls">
                            @Html.EditorFor(model => model.IsPublished)
                            @Html.ValidationMessageFor(model => model.IsPublished, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="control-group">

                        @Html.HiddenFor(model => model.ImageUrl)
                        @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="controls">
                            @*@Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })*@
                            @*@Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })})*@

                            <img src="@Model.ImageUrl" width="100" />
                        </div>

                    </div>
                    <div class="control-group">
                        <label class="control-label" for="fileInput">File input</label>
                        <div class="controls">

                            <div id="uniform-fileInput" class="uploader">
                                <input class="input-file uniform_on" id="uploadFile" name="uploadFile" type="file">
                                <span style="-moz-user-select: none;" class="filename">No file selected</span><span style="-moz-user-select: none;" class="action">Choose File</span>
                            </div>
                        </div>
                    </div>

                    <div class="form-actions">
                        <button type="submit" class="btn btn-primary">Save changes</button>
                        @*@Html.ActionLink("Back to List", "Index")*@
                    </div>
                </fieldset>
            }

        </div>
    </div>
</div>

